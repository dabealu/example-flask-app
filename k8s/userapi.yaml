apiVersion: v1
kind: Namespace
metadata:
  name: userapi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userapi
  namespace: userapi
spec:
  # replicas: 2
  selector:
    matchLabels:
      app: userapi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: userapi
    spec:
      containers:
      - name: userapi
        image: localhost:30003/userapi:latest
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        env:
        - name: MYSQL_DATABASE_USER
          value: app
        - name: MYSQL_DATABASE_PASSWORD
          value: app
        - name: MYSQL_DATABASE_DB
          value: app
        - name: MYSQL_DATABASE_HOST
          value: mysql
        - name: MYSQL_DATABASE_PORT
          value: "3306"
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: userapi
data:
  nginx.conf: |
    server {
      listen 80;
      # server_name localhost;

      location / {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: userapi
  namespace: userapi
spec:
  selector:
    app: userapi
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30005
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: userapi
  namespace: userapi
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: userapi
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
    - type: Resource
      resource:
        name: memory
        targetAverageUtilization: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: userapi
#   namespace: userapi
# spec:
#   rules:
#     - host: "*"
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: userapi
#                 port:
#                   number: 80
